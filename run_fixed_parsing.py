#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ –¥–ª—è –≤—Å–µ—Ö 250 –∫–æ–º–ø–∞–Ω–∏–π
"""

from fixed_erzrf_parser import FixedERZRFParser
import sys

def main():
    print("üîß –ó–ê–ü–£–°–ö –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –ü–ê–†–°–ï–†–ê ERZRF.RU")
    print("–ü–∞—Ä—Å–∏–º –¢–û–ü-250 –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–æ–≤ –†–æ—Å—Å–∏–∏")
    print("="*60)
    print("‚ú® –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print("- –£–ª—É—á—à–µ–Ω–∞ –æ—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫")
    print("- –£–ª—É—á—à–µ–Ω—ã –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–∏—Å–∫–∞ —Å–∞–π—Ç–æ–≤")
    print("- –£–ª—É—á—à–µ–Ω—ã –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–∏—Å–∫–∞ —Å–æ—Ü—Å–µ—Ç–µ–π")
    print("- –£–ª—É—á—à–µ–Ω—ã –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–æ–≤")
    print("- –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å—Å—ã–ª–æ–∫")
    print("="*60)
    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–π–º–µ—Ç 2-3 —á–∞—Å–∞!")
    print("üìä –ë—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ ~250 –∫–æ–º–ø–∞–Ω–∏–π —Å 13 —Å—Ç—Ä–∞–Ω–∏—Ü")
    print("üíæ –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 20 –∫–æ–º–ø–∞–Ω–∏–π")
    print("="*60)
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
    try:
        response = input("–ù–∞—á–∞—Ç—å –ø–æ–ª–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π? (y/N): ").strip().lower()
        if response not in ['y', 'yes', '–¥–∞']:
            print("–ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–º–µ–Ω–µ–Ω.")
            sys.exit(0)
    except KeyboardInterrupt:
        print("\n–ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–º–µ–Ω–µ–Ω.")
        sys.exit(0)
    
    # –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞
    parser = FixedERZRFParser()
    
    try:
        print("\nüéØ –ù–ê–ß–ò–ù–ê–ï–ú –ü–û–õ–ù–´–ô –ü–ê–†–°–ò–ù–ì –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –í–ï–†–°–ò–ï–ô...")
        companies = parser.parse_all_pages(max_pages=15)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        parser.save_to_excel('erzrf_companies_fixed_final.xlsx')
        parser.save_to_csv('erzrf_companies_fixed_final.csv')
        parser.save_failed_urls('failed_urls_fixed_final.txt')
        
        print(f"\nüéâ –ü–ê–†–°–ò–ù–ì –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–æ–º–ø–∞–Ω–∏–π: {len(companies)}")
        print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤:")
        print(f"   - erzrf_companies_fixed_final.xlsx")
        print(f"   - erzrf_companies_fixed_final.csv")
        if parser.failed_urls:
            print(f"   - failed_urls_fixed_final.txt ({len(parser.failed_urls)} –Ω–µ—É–¥–∞—á–Ω—ã—Ö URL)")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if companies:
            with_sites = sum(1 for c in companies if c['—Å–∞–π—Ç'])
            with_social = sum(1 for c in companies if c['—Å–æ—Ü—Å–µ—Ç–∏'])
            with_cities = sum(1 for c in companies if c['–≥–æ—Ä–æ–¥'])
            
            print(f"\nüìà –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
            print(f"–ö–æ–º–ø–∞–Ω–∏–π —Å —Å–∞–π—Ç–∞–º–∏: {with_sites}/{len(companies)} ({with_sites/len(companies)*100:.1f}%)")
            print(f"–ö–æ–º–ø–∞–Ω–∏–π —Å —Å–æ—Ü—Å–µ—Ç—è–º–∏: {with_social}/{len(companies)} ({with_social/len(companies)*100:.1f}%)")
            print(f"–ö–æ–º–ø–∞–Ω–∏–π —Å –≥–æ—Ä–æ–¥–∞–º–∏: {with_cities}/{len(companies)} ({with_cities/len(companies)*100:.1f}%)")
        
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –ü–∞—Ä—Å–∏–Ω–≥ –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        if parser.companies_data:
            parser.save_to_excel('erzrf_companies_partial_fixed.xlsx')
            parser.save_to_csv('erzrf_companies_partial_fixed.csv')
            parser.save_failed_urls('failed_urls_partial_fixed.txt')
            print(f"üíæ –ß–∞—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã ({len(parser.companies_data)} –∫–æ–º–ø–∞–Ω–∏–π)")
        sys.exit(1)
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        if parser.companies_data:
            parser.save_to_excel('erzrf_companies_error_fixed.xlsx')
            parser.save_to_csv('erzrf_companies_error_fixed.csv')
            parser.save_failed_urls('failed_urls_error_fixed.txt')
            print(f"üíæ –î–∞–Ω–Ω—ã–µ –¥–æ –æ—à–∏–±–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã ({len(parser.companies_data)} –∫–æ–º–ø–∞–Ω–∏–π)")
        sys.exit(1)
        
    finally:
        parser.close()

if __name__ == "__main__":
    main()