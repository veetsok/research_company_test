#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞
"""

from fixed_erzrf_parser import FixedERZRFParser

def test_fixed_parser():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ –Ω–∞ 3 –∫–æ–º–ø–∞–Ω–∏—è—Ö"""
    parser = FixedERZRFParser()
    
    try:
        print("üîß –¢–ï–°–¢–ò–†–£–ï–ú –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ü–ê–†–°–ï–†")
        print("–ü–∞—Ä—Å–∏–º –ø–µ—Ä–≤—ã–µ 3 –∫–æ–º–ø–∞–Ω–∏–∏ —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
        print("="*60)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        links = parser.get_company_links_from_page(1)
        if not links:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫–∏")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(links)} —Å—Å—ã–ª–æ–∫")
        
        # –ü–∞—Ä—Å–∏–º –ø–µ—Ä–≤—ã–µ 3 –∫–æ–º–ø–∞–Ω–∏–∏
        for i, link in enumerate(links[:3], 1):
            print(f"\nüìä –ö–û–ú–ü–ê–ù–ò–Ø {i}/3")
            print(f"URL: {link}")
            
            company_data = parser.extract_company_data(link)
            if company_data:
                parser.companies_data.append(company_data)
                
                print(f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: '{company_data['–Ω–∞–∑–≤–∞–Ω–∏–µ']}'")
                print(f"üèôÔ∏è  –ì–æ—Ä–æ–¥: '{company_data['–≥–æ—Ä–æ–¥'] if company_data['–≥–æ—Ä–æ–¥'] else '–ù–µ –Ω–∞–π–¥–µ–Ω'}'")
                print(f"üåê –°–∞–π—Ç: '{company_data['—Å–∞–π—Ç'] if company_data['—Å–∞–π—Ç'] else '–ù–µ –Ω–∞–π–¥–µ–Ω'}'")
                print(f"üì± –°–æ—Ü—Å–µ—Ç–∏: '{company_data['—Å–æ—Ü—Å–µ—Ç–∏'] if company_data['—Å–æ—Ü—Å–µ—Ç–∏'] else '–ù–µ –Ω–∞–π–¥–µ–Ω—ã'}'")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if parser.companies_data:
            parser.save_to_excel('test_fixed_result.xlsx')
            parser.save_to_csv('test_fixed_result.csv')
            
            print(f"\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
            print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–æ–º–ø–∞–Ω–∏–π: {len(parser.companies_data)}")
            print("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ test_fixed_result.xlsx –∏ test_fixed_result.csv")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            with_sites = sum(1 for c in parser.companies_data if c['—Å–∞–π—Ç'])
            with_social = sum(1 for c in parser.companies_data if c['—Å–æ—Ü—Å–µ—Ç–∏'])
            with_cities = sum(1 for c in parser.companies_data if c['–≥–æ—Ä–æ–¥'])
            
            print(f"\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
            print(f"–ö–æ–º–ø–∞–Ω–∏–π —Å —Å–∞–π—Ç–∞–º–∏: {with_sites}/{len(parser.companies_data)}")
            print(f"–ö–æ–º–ø–∞–Ω–∏–π —Å —Å–æ—Ü—Å–µ—Ç—è–º–∏: {with_social}/{len(parser.companies_data)}")
            print(f"–ö–æ–º–ø–∞–Ω–∏–π —Å –≥–æ—Ä–æ–¥–∞–º–∏: {with_cities}/{len(parser.companies_data)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
            print(f"\nüìã –ü–†–ò–ú–ï–†–´ –î–ê–ù–ù–´–•:")
            for i, company in enumerate(parser.companies_data, 1):
                print(f"{i}. {company['–Ω–∞–∑–≤–∞–Ω–∏–µ']} | {company['–≥–æ—Ä–æ–¥']} | {company['—Å–∞–π—Ç']}")
        
    finally:
        parser.close()

if __name__ == "__main__":
    test_fixed_parser()